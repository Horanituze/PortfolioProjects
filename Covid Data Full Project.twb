<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='PercentPopulationVaccinated' inline='true' name='federated.0y8zclr0nmhto918a8zpg1amogmj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PercentPopulationVaccinated' name='excel-direct.1jy3veh01ut52d1fuv4q71mdfr25'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/jhoranituze2/Library/CloudStorage/OneDrive-UniversityofIowa/Desktop/Portfolio/PercentPopulationVaccinated.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1jy3veh01ut52d1fuv4q71mdfr25' name='PopulationVaccinated' table='[sheet1$]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='integer' name='new_vaccinations' ordinal='4' />
            <column datatype='integer' name='RollingPeopleVaccinated' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1jy3veh01ut52d1fuv4q71mdfr25' name='PopulationVaccinated' table='[sheet1$]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='integer' name='new_vaccinations' ordinal='4' />
            <column datatype='integer' name='RollingPeopleVaccinated' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_E389DA69B6DD47EF90793D12C96A3912]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_E389DA69B6DD47EF90793D12C96A3912]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_E389DA69B6DD47EF90793D12C96A3912]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_E389DA69B6DD47EF90793D12C96A3912]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_E389DA69B6DD47EF90793D12C96A3912]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RollingPeopleVaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RollingPeopleVaccinated]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>RollingPeopleVaccinated</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_E389DA69B6DD47EF90793D12C96A3912]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0y8zclr0nmhto918a8zpg1amogmj].[max:population:qk]&quot;' value='Population' />
          <alias key='&quot;[federated.0y8zclr0nmhto918a8zpg1amogmj].[max:RollingPeopleVaccinated:qk]&quot;' value='Number of Vaccinations' />
        </aliases>
      </column>
      <column caption='Rolling People Vaccinated' datatype='integer' name='[RollingPeopleVaccinated]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='sheet1' datatype='table' name='[__tableau_internal_object_id__].[sheet1_E389DA69B6DD47EF90793D12C96A3912]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[RollingPeopleVaccinated]' derivation='Max' name='[max:RollingPeopleVaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='sheet1' id='sheet1_E389DA69B6DD47EF90793D12C96A3912'>
            <properties context=''>
              <relation connection='excel-direct.1jy3veh01ut52d1fuv4q71mdfr25' name='PopulationVaccinated' table='[sheet1$]' type='table'>
                <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='population' ordinal='3' />
                  <column datatype='integer' name='new_vaccinations' ordinal='4' />
                  <column datatype='integer' name='RollingPeopleVaccinated' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Coviddeaths' inline='true' name='federated.07f3ure0qtu2rm19e642x1is4p36' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Coviddeaths' name='textscan.1k64clp1gbs7741c9xcxu0s1oz6n'>
            <connection class='textscan' directory='/Users/jhoranituze2/Library/CloudStorage/OneDrive-UniversityofIowa/Desktop/Portfolio' filename='Coviddeaths.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1k64clp1gbs7741c9xcxu0s1oz6n' name='Coviddeaths.csv' table='[Coviddeaths#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='population' ordinal='4' />
            <column datatype='integer' name='total_cases' ordinal='5' />
            <column datatype='integer' name='new_cases' ordinal='6' />
            <column datatype='real' name='new_cases_smoothed' ordinal='7' />
            <column datatype='integer' name='total_deaths' ordinal='8' />
            <column datatype='integer' name='new_deaths' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
            <column datatype='real' name='total_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_per_million' ordinal='12' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
            <column datatype='real' name='total_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_per_million' ordinal='15' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
            <column datatype='real' name='reproduction_rate' ordinal='17' />
            <column datatype='string' name='icu_patients' ordinal='18' />
            <column datatype='string' name='icu_patients_per_million' ordinal='19' />
            <column datatype='string' name='hosp_patients' ordinal='20' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='22' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='24' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1k64clp1gbs7741c9xcxu0s1oz6n' name='Coviddeaths.csv' table='[Coviddeaths#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='population' ordinal='4' />
            <column datatype='integer' name='total_cases' ordinal='5' />
            <column datatype='integer' name='new_cases' ordinal='6' />
            <column datatype='real' name='new_cases_smoothed' ordinal='7' />
            <column datatype='integer' name='total_deaths' ordinal='8' />
            <column datatype='integer' name='new_deaths' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
            <column datatype='real' name='total_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_per_million' ordinal='12' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
            <column datatype='real' name='total_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_per_million' ordinal='15' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
            <column datatype='real' name='reproduction_rate' ordinal='17' />
            <column datatype='string' name='icu_patients' ordinal='18' />
            <column datatype='string' name='icu_patients_per_million' ordinal='19' />
            <column datatype='string' name='hosp_patients' ordinal='20' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='22' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='24' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[Coviddeaths.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Coviddeaths.csv' datatype='table' name='[__tableau_internal_object_id__].[Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column aggregation='CountD' caption='Hosp Patients' datatype='string' default-role='measure' default-type='quantitative' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Weekly Hosp Admissions' datatype='string' default-role='measure' default-type='quantitative' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' palette='sf_default' type='palette'>
            <map to='#4fd2d2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e287b2'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[usr:Calculation_217650583665291264:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[max:population:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0q9fn4d0c6ktab194bh1d0m8oshq'>
        <column caption='Total Vaccinations Per Million' datatype='real' name='[Calculation_217650583665291264]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='(max([total_vaccinations]) / max([federated.07f3ure0qtu2rm19e642x1is4p36].[population]))*1000000' />
        </column>
        <column-instance column='[Calculation_217650583665291264]' derivation='User' name='[usr:Calculation_217650583665291264:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Coviddeaths.csv' id='Coviddeaths.csv_8CB33F993FA24FEBA97F2BE1217838A0'>
            <properties context=''>
              <relation connection='textscan.1k64clp1gbs7741c9xcxu0s1oz6n' name='Coviddeaths.csv' table='[Coviddeaths#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='population' ordinal='4' />
                  <column datatype='integer' name='total_cases' ordinal='5' />
                  <column datatype='integer' name='new_cases' ordinal='6' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='7' />
                  <column datatype='integer' name='total_deaths' ordinal='8' />
                  <column datatype='integer' name='new_deaths' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
                  <column datatype='real' name='total_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_per_million' ordinal='12' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='15' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
                  <column datatype='real' name='reproduction_rate' ordinal='17' />
                  <column datatype='string' name='icu_patients' ordinal='18' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='19' />
                  <column datatype='string' name='hosp_patients' ordinal='20' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='22' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='24' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='CovidVaccinations' inline='true' name='federated.0q9fn4d0c6ktab194bh1d0m8oshq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CovidVaccinations' name='textscan.0hown0w1hc13ax1fxo2k81k9d24c'>
            <connection class='textscan' directory='/Users/jhoranituze2/Library/CloudStorage/OneDrive-UniversityofIowa/Desktop/Portfolio' filename='CovidVaccinations.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0hown0w1hc13ax1fxo2k81k9d24c' name='CovidVaccinations.csv' table='[CovidVaccinations#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_tests' ordinal='4' />
            <column datatype='string' name='new_tests' ordinal='5' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='6' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='7' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='8' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='9' />
            <column datatype='real' name='positive_rate' ordinal='10' />
            <column datatype='real' name='tests_per_case' ordinal='11' />
            <column datatype='string' name='tests_units' ordinal='12' />
            <column datatype='integer' name='total_vaccinations' ordinal='13' />
            <column datatype='integer' name='people_vaccinated' ordinal='14' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='15' />
            <column datatype='string' name='total_boosters' ordinal='16' />
            <column datatype='integer' name='new_vaccinations' ordinal='17' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='18' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='19' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='20' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='21' />
            <column datatype='string' name='total_boosters_per_hundred' ordinal='22' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='23' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='24' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='25' />
            <column datatype='real' name='stringency_index' ordinal='26' />
            <column datatype='real' name='population_density' ordinal='27' />
            <column datatype='real' name='median_age' ordinal='28' />
            <column datatype='real' name='aged_65_older' ordinal='29' />
            <column datatype='real' name='aged_70_older' ordinal='30' />
            <column datatype='real' name='gdp_per_capita' ordinal='31' />
            <column datatype='string' name='extreme_poverty' ordinal='32' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
            <column datatype='real' name='diabetes_prevalence' ordinal='34' />
            <column datatype='string' name='female_smokers' ordinal='35' />
            <column datatype='string' name='male_smokers' ordinal='36' />
            <column datatype='real' name='handwashing_facilities' ordinal='37' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
            <column datatype='real' name='life_expectancy' ordinal='39' />
            <column datatype='real' name='human_development_index' ordinal='40' />
            <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='41' />
            <column datatype='string' name='excess_mortality_cumulative' ordinal='42' />
            <column datatype='string' name='excess_mortality' ordinal='43' />
            <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='44' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0hown0w1hc13ax1fxo2k81k9d24c' name='CovidVaccinations.csv' table='[CovidVaccinations#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_tests' ordinal='4' />
            <column datatype='string' name='new_tests' ordinal='5' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='6' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='7' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='8' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='9' />
            <column datatype='real' name='positive_rate' ordinal='10' />
            <column datatype='real' name='tests_per_case' ordinal='11' />
            <column datatype='string' name='tests_units' ordinal='12' />
            <column datatype='integer' name='total_vaccinations' ordinal='13' />
            <column datatype='integer' name='people_vaccinated' ordinal='14' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='15' />
            <column datatype='string' name='total_boosters' ordinal='16' />
            <column datatype='integer' name='new_vaccinations' ordinal='17' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='18' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='19' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='20' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='21' />
            <column datatype='string' name='total_boosters_per_hundred' ordinal='22' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='23' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='24' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='25' />
            <column datatype='real' name='stringency_index' ordinal='26' />
            <column datatype='real' name='population_density' ordinal='27' />
            <column datatype='real' name='median_age' ordinal='28' />
            <column datatype='real' name='aged_65_older' ordinal='29' />
            <column datatype='real' name='aged_70_older' ordinal='30' />
            <column datatype='real' name='gdp_per_capita' ordinal='31' />
            <column datatype='string' name='extreme_poverty' ordinal='32' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
            <column datatype='real' name='diabetes_prevalence' ordinal='34' />
            <column datatype='string' name='female_smokers' ordinal='35' />
            <column datatype='string' name='male_smokers' ordinal='36' />
            <column datatype='real' name='handwashing_facilities' ordinal='37' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
            <column datatype='real' name='life_expectancy' ordinal='39' />
            <column datatype='real' name='human_development_index' ordinal='40' />
            <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='41' />
            <column datatype='string' name='excess_mortality_cumulative' ordinal='42' />
            <column datatype='string' name='excess_mortality' ordinal='43' />
            <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='44' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[CovidVaccinations.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[max:population:qk]&quot;' value='Population' />
          <alias key='&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases_per_million:qk]&quot;' value='Total Cases Per Million' />
          <alias key='&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases:qk]&quot;' value='Total Cases' />
        </aliases>
      </column>
      <column caption='Total Vaccinations Per Million' datatype='real' name='[Calculation_217650583665291264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(max([total_vaccinations]) / max([federated.07f3ure0qtu2rm19e642x1is4p36].[population]))*1000000' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='CovidVaccinations.csv' datatype='table' name='[__tableau_internal_object_id__].[CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='string' name='[excess_mortality]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative' datatype='string' name='[excess_mortality_cumulative]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='string' name='[excess_mortality_cumulative_absolute]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='string' name='[excess_mortality_cumulative_per_million]' role='dimension' type='nominal' />
      <column caption='Extreme Poverty' datatype='string' name='[extreme_poverty]' role='dimension' type='nominal' />
      <column caption='Female Smokers' datatype='string' name='[female_smokers]' role='dimension' type='nominal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='string' name='[male_smokers]' role='dimension' type='nominal' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='integer' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Boosters' datatype='string' name='[total_boosters]' role='dimension' type='nominal' />
      <column caption='Total Boosters Per Hundred' datatype='string' name='[total_boosters_per_hundred]' role='dimension' type='nominal' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Max' name='[max:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_217650583665291264]' derivation='User' name='[usr:Calculation_217650583665291264:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[max:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[sum:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0q9fn4d0c6ktab194bh1d0m8oshq]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[max:population:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[usr:Calculation_217650583665291264:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.07f3ure0qtu2rm19e642x1is4p36].[sum:population:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.07f3ure0qtu2rm19e642x1is4p36'>
        <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
        <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
        <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
        <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
        <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
        <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
        <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
        <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CovidVaccinations.csv' id='CovidVaccinations.csv_F3A5B540260A4C20B8655E7B0B59E1D6'>
            <properties context=''>
              <relation connection='textscan.0hown0w1hc13ax1fxo2k81k9d24c' name='CovidVaccinations.csv' table='[CovidVaccinations#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='total_tests' ordinal='4' />
                  <column datatype='string' name='new_tests' ordinal='5' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='6' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='7' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='8' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='9' />
                  <column datatype='real' name='positive_rate' ordinal='10' />
                  <column datatype='real' name='tests_per_case' ordinal='11' />
                  <column datatype='string' name='tests_units' ordinal='12' />
                  <column datatype='integer' name='total_vaccinations' ordinal='13' />
                  <column datatype='integer' name='people_vaccinated' ordinal='14' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='15' />
                  <column datatype='string' name='total_boosters' ordinal='16' />
                  <column datatype='integer' name='new_vaccinations' ordinal='17' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='18' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='19' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='20' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='21' />
                  <column datatype='string' name='total_boosters_per_hundred' ordinal='22' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='23' />
                  <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='24' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='25' />
                  <column datatype='real' name='stringency_index' ordinal='26' />
                  <column datatype='real' name='population_density' ordinal='27' />
                  <column datatype='real' name='median_age' ordinal='28' />
                  <column datatype='real' name='aged_65_older' ordinal='29' />
                  <column datatype='real' name='aged_70_older' ordinal='30' />
                  <column datatype='real' name='gdp_per_capita' ordinal='31' />
                  <column datatype='string' name='extreme_poverty' ordinal='32' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='34' />
                  <column datatype='string' name='female_smokers' ordinal='35' />
                  <column datatype='string' name='male_smokers' ordinal='36' />
                  <column datatype='real' name='handwashing_facilities' ordinal='37' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
                  <column datatype='real' name='life_expectancy' ordinal='39' />
                  <column datatype='real' name='human_development_index' ordinal='40' />
                  <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='41' />
                  <column datatype='string' name='excess_mortality_cumulative' ordinal='42' />
                  <column datatype='string' name='excess_mortality' ordinal='43' />
                  <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='44' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_121F39D80CF549399F70186C2A34BD60]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CovidVaccinations_Cases' type='sheet' worksheet='Vac by Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CovidVaccinations_Cases' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2_DD4D9B239DCD40E899DD9D13BF4C141E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CovidVaccinations_Deaths' type='sheet' worksheet='Vac by Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CovidVaccinations_Deaths' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action4_2F2CC676831D440CA5D84676F93205AC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CovidCases over Time' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='CovidCases over Time' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='CasesPerMil'>
      <table>
        <view>
          <datasources>
            <datasource caption='Coviddeaths' name='federated.07f3ure0qtu2rm19e642x1is4p36' />
            <datasource caption='PercentPopulationVaccinated' name='federated.0y8zclr0nmhto918a8zpg1amogmj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07f3ure0qtu2rm19e642x1is4p36'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y8zclr0nmhto918a8zpg1amogmj'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07f3ure0qtu2rm19e642x1is4p36].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_121F39D80CF549399F70186C2A34BD60]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.07f3ure0qtu2rm19e642x1is4p36].[none:continent:nk]' />
          </filter>
          <slices>
            <column>[federated.07f3ure0qtu2rm19e642x1is4p36].[Action (Location)]</column>
            <column>[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases_per_million:qk]' num-steps='4' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases_per_million:qk]' />
              <lod column='[federated.07f3ure0qtu2rm19e642x1is4p36].[none:location:nk]' />
              <lod column='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:population:qk]' />
              <lod column='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases_per_million:qk]' />
              <geometry column='[federated.07f3ure0qtu2rm19e642x1is4p36].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07f3ure0qtu2rm19e642x1is4p36].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07f3ure0qtu2rm19e642x1is4p36].[max:population:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases Per Million:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases_per_million:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.07f3ure0qtu2rm19e642x1is4p36].[Latitude (generated)]</rows>
        <cols>[federated.07f3ure0qtu2rm19e642x1is4p36].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{50368069-C28D-4D43-B518-0A284E1256FC}' />
    </worksheet>
    <worksheet name='DeathsPerMil'>
      <table>
        <view>
          <datasources>
            <datasource caption='Coviddeaths' name='federated.07f3ure0qtu2rm19e642x1is4p36' />
            <datasource caption='PercentPopulationVaccinated' name='federated.0y8zclr0nmhto918a8zpg1amogmj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07f3ure0qtu2rm19e642x1is4p36'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y8zclr0nmhto918a8zpg1amogmj'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07f3ure0qtu2rm19e642x1is4p36].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_DD4D9B239DCD40E899DD9D13BF4C141E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.07f3ure0qtu2rm19e642x1is4p36].[none:continent:nk]' />
          </filter>
          <slices>
            <column>[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]</column>
            <column>[federated.07f3ure0qtu2rm19e642x1is4p36].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_deaths_per_million:qk]' num-steps='4' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_deaths_per_million:qk]' />
              <lod column='[federated.07f3ure0qtu2rm19e642x1is4p36].[none:location:nk]' />
              <lod column='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:population:qk]' />
              <lod column='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_deaths_per_million:qk]' />
              <geometry column='[federated.07f3ure0qtu2rm19e642x1is4p36].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07f3ure0qtu2rm19e642x1is4p36].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07f3ure0qtu2rm19e642x1is4p36].[max:population:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Deaths Per Million:&#9; </run>
                <run bold='true'><![CDATA[<[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_deaths_per_million:qk]>]]></run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.07f3ure0qtu2rm19e642x1is4p36].[Latitude (generated)]</rows>
        <cols>[federated.07f3ure0qtu2rm19e642x1is4p36].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{229E919C-4C7D-4A27-B2C3-06BC2746028C}' />
    </worksheet>
    <worksheet name='Total Cases Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontsize='18'>WORLD TOTAL COVID CASES OVER TIME FROM</run>
            <run fontalignment='1' fontsize='18'>Æ </run>
            <run bold='true' fontalignment='1' fontsize='18'><![CDATA[<[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[twk:date:qk]>]]></run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidVaccinations' name='federated.0q9fn4d0c6ktab194bh1d0m8oshq' />
            <datasource caption='Coviddeaths' name='federated.07f3ure0qtu2rm19e642x1is4p36' />
          </datasources>
          <datasource-dependencies datasource='federated.07f3ure0qtu2rm19e642x1is4p36'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0q9fn4d0c6ktab194bh1d0m8oshq'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[:Measure Names]' />
              <lod column='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:population:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[twk:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases:qk]</rows>
        <cols>[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[twk:date:qk]</cols>
        <join-lod-include-overrides>
          <column>[federated.07f3ure0qtu2rm19e642x1is4p36].[continent]</column>
          <column>[federated.07f3ure0qtu2rm19e642x1is4p36].[location]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{7395B43C-322C-4004-BB55-67E7F8619204}' />
    </worksheet>
    <worksheet name='Vac by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID Vaccinations per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PercentPopulationVaccinated' name='federated.0y8zclr0nmhto918a8zpg1amogmj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0y8zclr0nmhto918a8zpg1amogmj'>
            <column caption='Rolling People Vaccinated' datatype='integer' name='[RollingPeopleVaccinated]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[RollingPeopleVaccinated]' derivation='Max' name='[max:RollingPeopleVaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y8zclr0nmhto918a8zpg1amogmj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0y8zclr0nmhto918a8zpg1amogmj].[max:population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0y8zclr0nmhto918a8zpg1amogmj].[max:RollingPeopleVaccinated:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0y8zclr0nmhto918a8zpg1amogmj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0y8zclr0nmhto918a8zpg1amogmj].[max:population:qk]&quot;</bucket>
              <bucket>&quot;[federated.0y8zclr0nmhto918a8zpg1amogmj].[max:RollingPeopleVaccinated:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0y8zclr0nmhto918a8zpg1amogmj].[max:population:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0y8zclr0nmhto918a8zpg1amogmj].[:Measure Names]</column>
            <column>[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0y8zclr0nmhto918a8zpg1amogmj].[:Measure Names]' value='116' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:location:nk]' value='200' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]' value='Continent'>
              <formatted-text>
                <run bold='true'>Continent</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0y8zclr0nmhto918a8zpg1amogmj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:location:nk]</rows>
        <cols>[federated.0y8zclr0nmhto918a8zpg1amogmj].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3E4AA0DB-72D1-4573-85C1-055094CAEF5C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='CovidCases over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>WORLD TOTAL COVID CASES OVER TIME</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98380' id='5' param='horz' type-v2='layout-flow' w='99064' x='468' y='810'>
            <zone h='98380' id='3' type-v2='layout-basic' w='99064' x='468' y='810'>
              <zone h='98380' id='1' name='Total Cases Over Time' w='99064' x='468' y='810'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{A8972685-FE7E-45BE-BADA-0AD0C8D7D497}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='CovidVaccinations_Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>COVID VACCINATIONS vs TOTAL CASES PER MILLION ACROSS COUNTRIES</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#e6e6e6' />
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='PercentPopulationVaccinated' name='federated.0y8zclr0nmhto918a8zpg1amogmj' />
      </datasources>
      <datasource-dependencies datasource='federated.0y8zclr0nmhto918a8zpg1amogmj'>
        <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
        <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98380' id='19' param='horz' type-v2='layout-flow' w='99064' x='468' y='810'>
            <zone h='98380' id='14' param='vert' type-v2='layout-flow' w='99064' x='468' y='810'>
              <zone fixed-size='79' h='8806' id='15' is-fixed='true' type-v2='title' w='99064' x='468' y='810'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='89574' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='9616'>
                <zone h='89574' id='5' type-v2='layout-basic' w='99064' x='468' y='9616'>
                  <zone h='89574' id='9' name='Vac by Country' show-title='false' w='36845' x='468' y='9616'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='89574' id='11' name='CasesPerMil' show-title='false' w='51775' x='37313' y='9616'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='160' h='89574' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='10444' x='89088' y='9616'>
                    <zone h='5263' id='20' mode='dropdown' name='Vac by Country' param='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]' type-v2='filter' values='database' w='10444' x='89088' y='9616'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true'>COVID VACCINATIONS vs TOTAL CASES PER MILLION ACROSS COUNTRIES</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='40' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98380' id='39' param='vert' type-v2='layout-flow' w='99064' x='468' y='810'>
                <zone fixed-size='79' h='8806' id='15' type-v2='title' w='99064' x='468' y='810'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5263' id='20' mode='dropdown' name='Vac by Country' param='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]' type-v2='filter' values='database' w='10444' x='89088' y='9616'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='89574' id='9' is-fixed='true' name='Vac by Country' show-title='false' w='36845' x='468' y='9616'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='89574' id='11' is-fixed='true' name='CasesPerMil' show-title='false' w='51775' x='37313' y='9616'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3504C0C3-D0D0-442B-A5E4-3922AFD97309}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='CovidVaccinations_Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>COVID VACCINATIONS vs TOTAL DEATHS PER MILLION ACROSS COUNTRIES</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='PercentPopulationVaccinated' name='federated.0y8zclr0nmhto918a8zpg1amogmj' />
      </datasources>
      <datasource-dependencies datasource='federated.0y8zclr0nmhto918a8zpg1amogmj'>
        <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
        <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98380' id='15' param='horz' type-v2='layout-flow' w='99064' x='468' y='810'>
            <zone h='98380' id='12' param='vert' type-v2='layout-flow' w='99064' x='468' y='810'>
              <zone fixed-size='68' h='7693' id='13' is-fixed='true' type-v2='title' w='99064' x='468' y='810'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='90687' id='10' param='horz' type-v2='layout-flow' w='99064' x='468' y='8503'>
                <zone h='90687' id='8' type-v2='layout-basic' w='99064' x='468' y='8503'>
                  <zone h='90687' id='5' name='Vac by Country' show-title='false' w='36402' x='468' y='8503'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='90687' id='7' name='DeathsPerMil' show-title='false' w='51334' x='36870' y='8503'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='160' h='90687' id='14' is-fixed='true' param='vert' type-v2='layout-flow' w='11328' x='88204' y='8503'>
                    <zone h='5263' id='16' mode='dropdown' name='Vac by Country' param='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]' type-v2='filter' values='database' w='11328' x='88204' y='8503'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true'>COVID VACCINATIONS vs TOTAL DEATHS PER MILLION ACROSS COUNTRIES</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98380' id='33' param='vert' type-v2='layout-flow' w='99064' x='468' y='810'>
                <zone fixed-size='68' h='7693' id='13' type-v2='title' w='99064' x='468' y='810'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5263' id='16' mode='dropdown' name='Vac by Country' param='[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]' type-v2='filter' values='database' w='11328' x='88204' y='8503'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='90687' id='5' is-fixed='true' name='Vac by Country' show-title='false' w='36402' x='468' y='8503'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='90687' id='7' is-fixed='true' name='DeathsPerMil' show-title='false' w='51334' x='36870' y='8503'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D2E7F5C3-E148-46F9-934B-224EAEA22944}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='dashboard' maximized='true' name='CovidVaccinations_Cases'>
      <viewpoints>
        <viewpoint name='CasesPerMil'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vac by Country'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{055C5059-0235-46D4-B1CC-E6282FE2285E}' />
    </window>
    <window class='dashboard' name='CovidVaccinations_Deaths'>
      <viewpoints>
        <viewpoint name='DeathsPerMil'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vac by Country'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{DE5ECF8F-E235-4005-BABF-34421D8B089B}' />
    </window>
    <window class='dashboard' name='CovidCases over Time'>
      <viewpoints>
        <viewpoint name='Total Cases Over Time'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{EBE933B6-5834-4D6B-83CD-7859F340812A}' />
    </window>
    <window class='worksheet' hidden='true' name='CasesPerMil'>
      <cards>
        <edge name='left'>
          <strip size='266'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases_per_million:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_cases_per_million:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F2052C30-D12D-4A9E-8CE5-45A8EC469706}' />
    </window>
    <window class='worksheet' hidden='true' name='DeathsPerMil'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_deaths_per_million:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07f3ure0qtu2rm19e642x1is4p36].[max:population:qk]</field>
            <field>[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_deaths:qk]</field>
            <field>[federated.07f3ure0qtu2rm19e642x1is4p36].[max:total_deaths_per_million:qk]</field>
            <field>[federated.07f3ure0qtu2rm19e642x1is4p36].[none:continent:nk]</field>
            <field>[federated.07f3ure0qtu2rm19e642x1is4p36].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E95F535-2151-4738-B1A4-D83C7140CCF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Cases Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[:Measure Names]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[none:continent:nk]</field>
            <field>[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[twk:date:ok]</field>
            <field>[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[twk:date:qk]</field>
            <field>[federated.0q9fn4d0c6ktab194bh1d0m8oshq].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5E53FEDE-2E44-44D5-9161-B5F16C2FD039}' />
    </window>
    <window class='worksheet' hidden='true' name='Vac by Country'>
      <cards>
        <edge name='left'>
          <strip size='235'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y8zclr0nmhto918a8zpg1amogmj].[attr:RollingPeopleVaccinated:qk]</field>
            <field>[federated.0y8zclr0nmhto918a8zpg1amogmj].[attr:population:qk]</field>
            <field>[federated.0y8zclr0nmhto918a8zpg1amogmj].[max:RollingPeopleVaccinated:qk]</field>
            <field>[federated.0y8zclr0nmhto918a8zpg1amogmj].[max:population:qk]</field>
            <field>[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:continent:nk]</field>
            <field>[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:date:qk]</field>
            <field>[federated.0y8zclr0nmhto918a8zpg1amogmj].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4430FB66-D282-4419-A561-AF940EEFF961}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='CovidCases over Time' width='384'>
      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
      JFJYWEhubi61tbUcOXKEkpIS8vPzCYVCNDQ0UFNTkzqUEggEgIGNxRv19PTg9Xrx+f7nn9Qb
      zxt8+tOfZvXq1Rc8tp6eHhzHedMG8y8JBoNvCoYxhrNnz77lidE32r17N1lZWezatSu1l7t7
      925Wr16dVsAyMzOJRCJvObZYLEYymRyy19rT00NGRkZqprBs2TKqqqr4+Mc/TmVlJVdffXVq
      xpWOaDRKIBAYEqGMjIzUz84VgQMHDhCLxTh+/Divv/46Xq+Xffv2EY/HCQQCzJw5k4cffpia
      mhr+9Kc/8V//9V/09/enDm/NmjWLT3/606nljRo1KvXfb37zm7S2trJ161aeffZZTp48ybe+
      9a3U+Hw+Hx6P501/r/r6+nAcJzX2pUuX8uijj3LkyBHOnj2Lz+dj0aJFQ+7zuc99bkgs8/Pz
      U1/v3r2b8vJy+vv7Wbt2rWYAIpmZmRQVFVFdXU1tbS0lJSV4PB5mz57N/v37aWpqYu7cuQCE
      QiFGjx79pj3iqqoqxo0bN2Rq/+Uvf5n77rsPr9fLiRMnLnjv3xjDpk2byMnJYcqUKWnfb+bM
      mdTX19PZ2Zn6XnNzM6dPn2bmzJl/8b62bbNnzx6ysrJ45ZVXePnll1OHbs51eOtcrrjiCo4e
      PTpkz3PQjBkz6OnpIRwOp74Xj8c5ePDgkLEtX76c48ePU11dnTonk654PM4rr7xCcXHxkMhM
      mjSJ3Nxcdu7cec77VVRUkJ+fz+7du3n55ZeJRqN0dnZy9OhRjDEYY7Asizlz5vCFL3yBm266
      acgJ5JycHObOnZv6MxiZwcM1BQUFfOxjH+Mzn/kM1dXVxOPx1H29Xi9FRUVUVVUNOSexb98+
      fD5f6vc/ZswYZs+eTWVlJZWVlSxatCgVh0FFRUVDxjG40wLw4Q9/mB/+8Ifk5+dTX1+vGYAI
      DJwH2LhxI47jMH36dGBgQ/brX/+aWCyW2jgFg0FWrlzJhg0bmD17NkuWLGH37t1s27aNO+64
      Y8gMAGDhwoV85Stf4YEHHiAjI4O77roLAMdxqK6uJicnBxjYe3zj9/1+P+Xl5WzatImPf/zj
      qdul4/rrr+epp57ikUce4bOf/SyJRIIf//jH5Ofnp07KvpXjx4/T2trKQw89xIwZM4CBQzqf
      +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
    </thumbnail>
    <thumbnail height='384' name='CovidVaccinations_Cases' width='384'>
      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
      v/jFUk+8M2rJZLK/Hx8fH7Zt24ZKpWJ2dpbo6Ghuu+02/Pz8CAoKYv369YyPjzM8PExcXBzf
      +973FvVE/f39sdvtrF+/noyMjEU3DOPj46Uevre3N2FhYURHR3P77bfzzW9+c8kErnkGgwGd
      Tsf27duJjIwE5pK7vL292bJlizTtE+aGkVQqFfHx8Wi1WrZt24afnx/T09P4+/vz2c9+Vkq4
      ysrKYtWqVUxNTaHVarn55ptZvXo1CoVCSlzy9PSUZi0lJiZKs3jCw8OJjIxkzZo1aLVa7HY7
      N954o3R/AuaGYJRKJTExMdLVkiAIJCUlSVNmrzx/8++v1+vZsmULdrud/v5+goOD+fa3v016
      erp0XjUaDampqeh0OgRBICYmRpq9FR4eTkpKCuHh4dhsNkRRZPPmzXzrW99aMhAFBgYyMTHB
      pk2bSEtLk2YNeXl50dfXx9TUFHfccQc333zzkjeC5z9//ruBuSuTG264AZ1OR29vL2q1mvvv
      v58dO3Ys+R7JyckI4hK3zEVRZGBg4Ko/DplMJpN98sn3AGQymWyZkgOATCaTLVNyAJDJZLJl
      Sg4AMplMtkzJAUAmk8mWKTkAyGQy2TIlBwCZTCZbpuQAIJPJZMuUHABkMplsmZIDgEwmky1T
      cgCQyWSyZUoOADKZTLZMyQFAJpPJlqmr1gPw8vL6KPdDJpPJZB+xJZeDlslkMtmnnzwEJJPJ
      ZMuUHABkMplsmZJrAstksmXL5XIxOzt7vXfjupEDgEwmW7bcbjevmuy02ZZnUygPAclkMtky
      JQcA2ceO2WzmxRdfZN++fQwNDV3z62ZmZnjjjTdwu90LHu/o6MDhcGAymSguLn5f+/L444/z
      8MMPL/jXbDa/r/f4RxgcHOTgwYPY7XZqa2sZHR29ptccP378fX+Ww+HgpZde4uDBgzidToqK
      irDZbMzMzHDmzJlreo/m5maqq6vfdZve3l5mZmaYnJzkyJEj73s/Ze/f8rzukX2sDQ8PMzU1
      RVxcHLt37+aRRx7h9OnTrFq1iri4OKqrqxkaGmLr1q2YzWZiYmLo6urC19eXjo4OpqenKS4u
      Rq/XEx8fz29/+1u2bt3Khg0bCAgIYGxsjBMnThAfH8+qVauora1laGiIDRs2EB4evmBffvWr
      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
      ycnJxMTEkJ+fLyd+b968idFoRKfTUV1dTXR0NHq9nt7eXvr6+vD7/ZjNZurq6pienmbDhg3P
      3CL9fUQURa5du8aNGzfQaDRs3bqV3t5eWlpayM/PZ2xsjP7+fu7fv8/U1BQ9PT1YLBauXbtG
      X18fxcXFJCcnU1lZyfDwMEVFRVy+fJnExES++OIL2tvbSU9PJzc3l0uXLuH1etmyZQsDAwNY
      rdav7GcWRZFb4x4mAt/9FlKVJR5pchTN9AhOLzi9EhoCbIr2IPn9ZAfs9IWlIEX8ZQG9JTuB
      Q9O/oiji9/sXTLxIkoTX633sH0fwY4JPC496XwWFpbAUJ7Df719SO3PQCazRaPD5fI91zPp8
      PtRq9fLtNX8Ci1O5wS4grVZLa2srmZmZD5XOQr3MgNwBtFQn8PPi+5AEDkWccOBrqUbsbUGL
      H51KwKITSQv382KqQIM3jrrwfJzxOYhhEc8uhVdQUFD4rvN9GwAkSYKAD393M1LjRTTeGbQq
      UEkiCeEqEiIEhgwp2Ewr8GvCvpoTWEFBQeHbwnJ1AociCAJodGhyNiBFJ+DrbsZz7w4EfHjM
      aTyItqLK2wb6CLSKE1hBQeH7glLM+AuCSo0Qn0ZYXApibjGiexpf2w00SVkIhr90zS3puSfo
      Q1WpVEtuuZqbm0OlUi3vgIbCX4XQVs4gwZpy8I7wUdssfg+/3y/PAQT9v8HXfx315+8yi49n
      6PERRRFRFJ84r7d4m8Xna/HnBLcJXQ3U7/cr8zJfhqBCZY5DFRWLOi4FVAuP75KCYM3NzZSX
      lxMZGcmPf/zjx/ZCS5LElStX2LNnD3V1dVgsFtatWyd/v6ysjJycHDo7O4mLi3vsSowKCo9j
      sRPY7XZTWVnJoUOH5J7/e/fu0djYSCAQYM+ePczOzlJRUcHhw4exWCx88MEH6PV6srKyZL91
      VVUV4+Pj6HQ6tm/fTnl5OT6fj927dzM4OEhvby+SJPHSSy8t+yCY1+vl2rVrzM3N8eKLL3Lr
      1i16enqQJEn29fp8PvLz88nJyQGgrq6Onp4eoqOjKS4u5sqVK4iiSGpqKllZWZSVlaFWq9m7
      dy9RUVHy55w5c4a1a9fi9/sXOIHv3btHT08PCQkJSoB0KQgCgvbhBp0lPQGUl5ezfft2MjIy
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='CovidVaccinations_Deaths' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
